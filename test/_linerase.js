// Generated by CoffeeScript 1.7.1
(function() {
  var assert, parseString, _linerase;

  _linerase = (require('../lib/onvif'))._linerase;

  assert = require('assert');

  parseString = (require('xml2js')).parseString;

  describe('linerase function', function() {
    it('should handle tag', function(done) {
      return parseString('<a><b>text</b><c>text</c></a>', function(err, result) {
        assert.deepEqual(_linerase(result), {
          a: {
            b: 'text',
            c: 'text'
          }
        });
        return done();
      });
    });
    it('should handle multiply tags', function(done) {
      return parseString('<a><b>text</b><b>text</b></a>', function(err, result) {
        assert.deepEqual(_linerase(result), {
          a: {
            b: ['text', 'text']
          }
        });
        return done();
      });
    });
    it('should handle multiply tags deeply', function(done) {
      return parseString('<a><b><c>text</c><d>t</d></b><b><c>text</c><d>t</d></b></a>', function(err, result) {
        assert.deepEqual(_linerase(result), {
          a: {
            b: [
              {
                c: 'text',
                d: 't'
              }, {
                c: 'text',
                d: 't'
              }
            ]
          }
        });
        return done();
      });
    });
    it('should remove xml namespaces', function(done) {
      return parseString('<ns:a><q:b>text</q:b><c>text</c></ns:a>', function(err, result) {
        assert.deepEqual(_linerase(result), {
          a: {
            b: 'text',
            c: 'text'
          }
        });
        return done();
      });
    });
    return it('should camelcase names', function(done) {
      return parseString('<ns:Abc><q:ABC>text</q:ABC><abc>text</abc></ns:Abc>', function(err, result) {
        assert.deepEqual(_linerase(result), {
          abc: {
            ABC: 'text',
            abc: 'text'
          }
        });
        return done();
      });
    });
  });

}).call(this);

//# sourceMappingURL=_linerase.map
