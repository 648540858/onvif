// Generated by CoffeeScript 1.9.2
(function() {
  var assert, onvif, serverMockup;

  assert = require('assert');

  onvif = require('../lib/onvif');

  serverMockup = require('./serverMockup');

  describe('Events', function() {
    var cam;
    cam = null;
    before(function(done) {
      var options;
      options = {
        hostname: process.env.HOSTNAME || 'localhost',
        username: 'admin',
        password: '9999',
        port: process.env.PORT ? parseInt(process.env.PORT) : 10101
      };
      return cam = new onvif.Cam(options, done);
    });
    it('should request device events', function(done) {
      return cam.getEventProperties(function(err, res) {
        assert.equal(err, null);
        assert.deepEqual(this.events.properties, res);
        return done();
      });
    });
    return it('should request event service capabilities', function(done) {
      return cam.getEventServiceCapabilities(function(err, res) {
        assert.equal(err, null);
        assert.ok(['PersistentNotificationStorage', 'MaxPullPoints', 'MaxNotificationProducers', 'WSPausableSubscriptionManagerInterfaceSupport', 'WSPullPointSupport', 'WSSubscriptionPolicySupport'].every(function(name) {
          return res[name] !== void 0;
        }));
        return done();
      });
    });
  });

}).call(this);

//# sourceMappingURL=events.js.map
